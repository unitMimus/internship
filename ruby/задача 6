def rps_game_winner(step)
  actions=["R","S","P"]
  
  begin	#Ловим неправильное количество игрков
    raise 'WrongNumberOfPlayersError' if step.length!=2
  rescue StandardError => e
    puts e.message
    return
  end
  
  begin	#Ловим неправильные ходы
    raise 'NoSuchStrategyError' if !(actions.include?(step[0][1]) && actions.include?(step[1][1]))
  rescue StandardError => e
    puts e.message
    return
  end
  
  case [step[0][1],step[1][1]]
    when ["R","S"], ["S","P"], ["P","R"] then print "#{step[0][0]} #{step[0][1]}\n"	#Ходы разные, побеждает первый
    when ["S","R"], ["P","S"], ["R","P"] then print "#{step[1][0]} #{step[1][1]}\n"	#Ходы разные, побеждает второй
    else print "#{step[0][0]} #{step[0][1]}\n"	#Ходы одинаковые => побеждает первый
  end
  
end

rps_game_winner([%w[player1 P], %w[player2 S], %w[player3 S]]) # => WrongNumberOfPlayersError 
rps_game_winner([%w[player1 P], %w[player2 A]]) # => NoSuchStrategyError 
rps_game_winner([%w[player1 P], %w[player2 S]]) # => 'player2 S' 
rps_game_winner([%w[player1 P], %w[player2 P]]) # => 'player1 P' 
